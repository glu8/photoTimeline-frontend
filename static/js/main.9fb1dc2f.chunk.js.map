{"version":3,"sources":["components/UploadImages.js","components/TimelineItem.js","components/Timeline.js","components/Map.js","components/PhotoTrail.js","components/TimelineList.js","components/TimelineEditList.js","components/NavBar.js","App.js","reportWebVitals.js","index.js"],"names":["DropZoneUploader","props","react_default","a","createElement","react_dropzone_uploader_default","getUploadParams","_ref","file","body","meta","FormData","append","console","log","timelineID","url","process","onChangeStatus","_ref2","status","onSubmit","files","allFiles","map","f","forEach","remove","accept","UploadImages","params","useParams","_useState","useState","_useState2","Object","slicedToArray","timeline","setTimeline","useEffect","axios","get","then","res","data","className","name","style","margin","onClick","TimelineItem","parseDate","s","b","split","Date","steps","startDateTime","imageGroup","endDateTime","startDate","toDateString","endDate","startTime","toLocaleTimeString","hour","minute","endTime","itemWrapperRef","useRef","previousY","previousRatio","callbackFunction","entries","entry","currentY","boundingClientRect","y","currentRatio","intersectionRatio","isIntersecting","nextGroup","setMapView","latitude","longitude","options","root","rootMargin","threshold","Array","fill","_","index","observer","IntersectionObserver","current","observe","unobserve","ref","padding","key","sequence","element","itemsRef","color","cursor","location","images","imageId","es","small","large","PhotoTrail","timelineData","position","right","top","width","height","overflowY","timelineRef","length","TimelineItem_TimelineItem","prevGroup","GoogleApiWrapper","apiKey","initialCenter","lat","lng","setCoordinates","google_maps_react_dist","google","onChange","center","zoom","setZoom","coordinates","streetViewControl","fullscreenControl","styles","stylers","saturation","gamma","group","index1","imageMetadata","object","index2","_id","id","standardZoom","scrollTimelineItemIntoView","backgroundColor","_useState3","_useState4","setTimelineData","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","method","response","imageGroupList","catch","error","overflow","textAlign","left","Map","scrollIntoView","class","withRouter","PhotoTrail_PhotoTrail","assign","TimelineList","timelineList","setTimelineList","text-align","timelineStartDate","timelineEndDate","react_router_dom_dist","to","_useInput","value","setValue","e","target","type","useInput","_useInput2","timelineName","nameInput","getTimelineList","post","window","reload","Navbar","App","bottom","dist","path","src_components_PhotoTrail","UploadImages_UploadImages","TimelineEditList_TimelineList","replace","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","src_App"],"mappings":"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","file":"static/js/main.9fb1dc2f.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom'\nimport 'react-dropzone-uploader/dist/styles.css';\nimport Dropzone from 'react-dropzone-uploader';\nimport './UploadImages.css';\nimport axios from 'axios';\n\nfunction DropZoneUploader(props) {\n    // specify upload params and url for your files\n    const getUploadParams = ({ file, meta }) => {\n        const body = new FormData()\n        body.append('file', file)\n        console.log(file)\n        body.append('timelineID', props.timelineID)\n        return { url: process.env.REACT_APP_BASE_BACKEND_URL + '/upload', body }\n    }\n\n    // called every time a file's `status` changes\n    const handleChangeStatus = ({ meta, file }, status) => { console.log(status, meta, file) }\n\n    // receives array of files that are done uploading when submit button is clicked\n    const handleSubmit = (files, allFiles) => {\n        console.log(files.map(f => f.meta))\n        allFiles.forEach(f => f.remove())\n    }\n\n    return (\n        <Dropzone\n            getUploadParams={getUploadParams}\n            onChangeStatus={handleChangeStatus}\n            onSubmit={handleSubmit}\n            accept=\"image/jpeg,image/jpg\"\n        />\n    )\n}\n\nexport default function UploadImages() {\n\n    const params = useParams()\n    const [timeline, setTimeline] = useState({})\n\n    function generateTimeline() {\n        axios.get(process.env.REACT_APP_BASE_BACKEND_URL + \"/generateTimelineGroups/\" + params.timelineID).then(res => {\n            console.log(res.status)\n        })\n    }\n\n    function getTimeline() {\n        axios.get(process.env.REACT_APP_BASE_BACKEND_URL + \"/getOneTimeline/\" + params.timelineID).then(res => {\n            setTimeline(res.data.timeline)\n            console.log(res.data.timeline)\n        })\n    }\n\n    useEffect(() => {\n        getTimeline()\n    }, [])\n\n    return (\n\n        <div className=\"UploadImageContainer\">\n\n            <h2>{timeline.name}</h2>\n\n            <h3>Upload Files</h3>\n            <p>Please only upload JPEGs (.jpeg or .jpg) of maximum 500 KB file size.</p>\n            <DropZoneUploader timelineID={params.timelineID} />\n\n            <button style={{ margin: 10 }} onClick={generateTimeline}>Generate Timeline</button>\n        </div>\n\n    )\n}","import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport ModalImage from \"react-modal-image\";\nimport './TimelineItem.css';\n\nexport default function TimelineItem(props) {\n\n    function parseDate(s) {\n        var b = s.split(/\\D/);\n        return new Date(b[0], b[1] - 1, b[2], b[3], b[4], b[5]);\n    }\n\n    let startDateTime = parseDate(props.imageGroup.startDateTime)\n    let endDateTime = parseDate(props.imageGroup.endDateTime)\n    let startDate = startDateTime.toDateString()\n    let endDate = endDateTime.toDateString()\n    let startTime = startDateTime.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })\n    let endTime = endDateTime.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })\n\n    const [imageGroup, setImageGroup] = useState(props.imageGroup)\n    const itemWrapperRef = useRef(null)\n\n    const thresholdArray = steps => Array(steps + 1)\n        .fill(0)\n        .map((_, index) => index / steps || 0)\n\n\n    let previousY = null\n    let previousRatio = null\n\n    const callbackFunction = (entries) => {\n\n        entries.forEach(entry => {\n            const currentY = entry.boundingClientRect.y\n            const currentRatio = entry.intersectionRatio\n            const isIntersecting = entry.isIntersecting\n\n            if (currentY < previousY && isIntersecting) {\n                console.log(imageGroup, previousY, currentY, previousRatio, currentRatio)\n                if ((currentRatio <= previousRatio) && (currentRatio < 0.5) && (props.nextGroup)) {\n                    props.setMapView(props.nextGroup.latitude, props.nextGroup.longitude)\n                }\n            } else if (previousY != null && currentY > previousY && isIntersecting) {\n                if ((currentRatio >= previousRatio) && (currentRatio > 0.5)) {\n                    props.setMapView(props.imageGroup.latitude, props.imageGroup.longitude)\n                }\n\n            }\n\n            previousY = currentY\n            previousRatio = currentRatio\n\n        })\n    }\n\n    const options = {\n        root: null,\n        rootMargin: \"0px\",\n        threshold: thresholdArray(100)\n    }\n\n    useEffect(() => {\n        const observer = new IntersectionObserver(callbackFunction, options)\n        if (itemWrapperRef.current) observer.observe(itemWrapperRef.current)\n\n        return () => {\n            if (itemWrapperRef.current) observer.unobserve(itemWrapperRef.current)\n        }\n    }, [itemWrapperRef, options])\n\n\n    return (\n        <div className=\"TimelineItemWrapper\" ref={itemWrapperRef}>\n            <div className=\"TimelineItem\" style={{ padding: '20px' }} key={imageGroup.sequence} ref={(element) => { props.itemsRef.current[props.index] = element }}>\n                <h3><a style={{ color: \"black\", cursor: \"pointer\" }} onClick={() => { props.setMapView(imageGroup.latitude, imageGroup.longitude) }}>{imageGroup.sequence + 1} / {imageGroup.location}</a></h3>\n                <p>{startTime}, {startDate}{(props.imageGroup.startDateTime === props.imageGroup.endDateTime) ? \"\" : \"-\" + endTime + \", \" + endDate}</p>\n                <div className=\"PhotoGrid\">\n                    {imageGroup.images.map((imageId) => {\n                        return (\n                            <div className=\"PhotoItem\">\n                                <ModalImage\n                                    small={process.env.REACT_APP_BASE_BACKEND_URL + \"/image/\" + imageId}\n                                    large={process.env.REACT_APP_BASE_BACKEND_URL + \"/image/\" + imageId}\n                                />\n                                {/* <img key={imageId} src={\"http://localhost:1000/image/\" + imageId} alt=\"\" resizeMode='contain' width={200} />)*/}\n                            </div>)\n\n                    })}\n                </div>\n\n            </div>\n        </div>\n    )\n\n}\n\n","import React, { useState, useEffect, useRef } from 'react';\nimport TimelineItem from './TimelineItem';\n\nexport default function PhotoTrail(props) {\n\n    const timelineData = props.timelineData\n\n    return (\n        <div className=\"TimelineContainer\" style={{ position: 'absolute', right: 0, top: 0, width: '100%', height: '100%', overflowY: 'scroll' }} ref={props.timelineRef}>\n            {timelineData.map((imageGroup, index) => {\n\n                if ((index > 0) && (index < timelineData.length - 1)) {\n                    return (<TimelineItem imageGroup={imageGroup} setMapView={props.setMapView} itemsRef={props.itemsRef} index={index} key={index} timelineRef={props.timelineRef} prevGroup={timelineData[index - 1]} nextGroup={timelineData[index + 1]} />)\n                } else if ((index === 0)) {\n                    return (<TimelineItem imageGroup={imageGroup} setMapView={props.setMapView} itemsRef={props.itemsRef} index={index} key={index} timelineRef={props.timelineRef} nextGroup={timelineData[index + 1]} prevGroup={timelineData[index - 1]} />)\n                } else {\n                    return (<TimelineItem imageGroup={imageGroup} setMapView={props.setMapView} itemsRef={props.itemsRef} index={index} key={index} timelineRef={props.timelineRef} prevGroup={timelineData[index - 1]} />)\n                }\n            })}\n        </div>\n    )\n}","import React, { useRef, useEffect, useState } from 'react';\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\n\nfunction MapContainer(props) {\n\n    const initialCenter = {\n        lat: props.timelineData[0].latitude,\n        lng: props.timelineData[0].longitude\n    }\n\n    useEffect(() => {\n        props.setCoordinates(initialCenter)\n    }, [])\n\n    const mapStyles = {\n        width: '100%',\n        height: '100%',\n    };\n\n    function _onChange({ center, zoom }) {\n        props.setCoordinates(center)\n        props.setZoom(zoom)\n    }\n\n    /*\n    function displayMarkers() {\n        return props.timelineData.map((object, index) => {\n            return <Marker key={object._id + \"_marker\"} id={object._id + \"_marker\"} position={{\n                lat: object.latitude,\n                lng: object.longitude\n            }} onClick={() => {\n                props.setCoordinates({\n                    lat: object.latitude,\n                    lng: object.longitude\n                })\n                props.setZoom(props.standardZoom)\n                props.scrollTimelineItemIntoView(index)\n            }}\n\n                style={{\n                    backgroundColor: 'blue'\n                }}\n\n            />\n        })\n    }\n    */\n\n    function displayMarkers() {\n        return props.timelineData.map((group, index1) => {\n            return group.imageMetadata.map((object, index2) => {\n                console.log(object)\n                return <Marker key={object._id + \"_marker\"} id={object._id + \"_marker\"} position={{\n                    lat: object.latitude,\n                    lng: object.longitude\n                }} onClick={() => {\n                    props.setCoordinates({\n                        lat: object.latitude,\n                        lng: object.longitude\n                    })\n                    props.setZoom(props.standardZoom)\n                    props.scrollTimelineItemIntoView(index1)\n                }}\n\n                    style={{\n                        backgroundColor: 'blue'\n                    }}\n\n                />\n            })\n        })\n    }\n\n    return (\n        <Map\n            google={props.google}\n            onChange={_onChange}\n            zoom={props.zoom}\n            style={mapStyles}\n            initialCenter={props.coordinates}\n            center={props.coordinates}\n            streetViewControl={false}\n            fullscreenControl={false}\n            options={{ styles: [{ stylers: [{ 'saturation': 50 }, { 'gamma': 0.5 }] }] }}\n        >\n            {displayMarkers()}\n        </Map>\n    )\n}\n\nexport default GoogleApiWrapper({\n    apiKey: 'AIzaSyCQQQZKC99E52XiY4bd1eZI_VOG2RFqsJ8'\n})(MapContainer);\n\n/*\nexport default function Map() {\n    const mapContainer = useRef(null);\n    const map = useRef(null);\n    const [lng] = useState(139.753);\n    const [lat] = useState(35.6844);\n    const [zoom] = useState(14);\n    const [API_KEY] = useState('VmBZxlaZKIBQIYAMxmWj');\n\n\n    useEffect(() => {\n        if (map.current) return; //stops map from intializing more than once\n        map.current = new maplibregl.Map({\n            container: mapContainer.current,\n            style: `https://api.maptiler.com/maps/streets/style.json?key=${API_KEY}`,\n            center: [lng, lat],\n            zoom: zoom\n        });\n    });\n\n    return (\n        <div className=\"map-wrap\">\n            <div ref={mapContainer} className=\"map\" />\n        </div>\n    );\n\n\n} */","import React, { useState, useEffect, useRef } from 'react';\nimport { useParams } from 'react-router-dom'\nimport axios from 'axios';\nimport Timeline from './Timeline.js';\nimport './PhotoTrail.css';\nimport Map from './Map.js';\n\nexport const useIntersect = () => {\n    const [entry, updateEntry] = useState({});\n    const options = {\n        rootMargin: \"0px\",\n        threshold: 1.0\n    }\n\n    const callbackFunction = (entries) => {\n        console.log(entries)\n    }\n\n    const observer = useRef(\n        new IntersectionObserver(callbackFunction, options)\n    );\n\n    return entry;\n};\n\nconst withRouter = WrappedPhotoTrail => props => {\n    const params = useParams()\n    return (\n        <PhotoTrail\n            {...props}\n            params={params}\n        />\n    )\n}\n\nfunction PhotoTrail(props) {\n\n    const standardZoom = 12\n    const [timelineData, setTimelineData] = useState([])\n    const [coordinates, setCoordinates] = useState({ lat: 37.7, lng: 122.41 })\n    const [zoom, setZoom] = useState(standardZoom)\n    const itemsRef = useRef([])\n    const timelineRef = useRef({})\n    const [timelineID, setTimelineID] = useState(0)\n\n    function getTimelineData(timelineID) {\n        console.log(\"timelineID\", timelineID)\n        axios({\n            method: \"GET\",\n            url: process.env.REACT_APP_BASE_BACKEND_URL + \"/timelineData/\" + timelineID\n        }).then((response) => {\n            const res = response.data\n\n            setTimelineData(\n                res.imageGroupList\n            )\n\n        }).catch((error) => {\n            console.log(error)\n        })\n    }\n\n    useEffect(() => {\n        getTimelineData(props.params.timelineID)\n    }, [])\n\n    function setMapView(latitude, longitude) {\n        setCoordinates({\n            lat: latitude,\n            lng: longitude\n        })\n        setZoom(standardZoom)\n    }\n\n    function scrollTimelineItemIntoView(index) {\n        itemsRef.current[index].scrollIntoView()\n    }\n\n\n\n    return (\n        <div style={{ height: '100%', width: '100%', position: 'relative', overflow: 'hidden' }}>\n\n            {(timelineData.length === 0) ? <div style={{ textAlign: 'center' }}>\n                <h1>Generating timeline... (this can take a minute. Make sure that images have been uploaded for this timeline.)</h1>\n            </div> :\n                <div>\n                    <div style={{ position: 'absolute', left: 0, top: 0, height: '100%', width: '45%' }}>\n                        {<Map timelineData={timelineData} zoom={zoom} coordinates={coordinates} setCoordinates={setCoordinates} setZoom={setZoom} scrollTimelineItemIntoView={scrollTimelineItemIntoView} />}\n\n                    </div>\n\n                    <div style={{\n                        position: 'absolute', right: 0, top: 0, width: '55%', height: '100%'\n                    }} >\n                        {<Timeline timelineData={timelineData} setMapView={setMapView} timelineRef={timelineRef} itemsRef={itemsRef} class='Timeline' />}\n\n                    </div>\n                </div>\n            }\n        </div>\n\n    )\n}\n\nexport default withRouter(PhotoTrail)\n/*\n<div style={{ position: 'absolute', left: 0, top: 0, width: '62%', height: '100%' }}>\n\n <div style={{ position: 'absolute', right: 0, top: 0, width: '38%', height: '100%' }}>\n                <Timeline timelineData={timelineData} class='Timeline' />\n            </div>\n\n<div style={{ height: '100%', width: '40%', overflowY: 'scroll' }}>\n                <Timeline timelineData={timelineData} class='Timeline' />\n\n            </div>\n*/","import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nexport default function TimelineList() {\n\n    const [timelineList, setTimelineList] = useState([])\n\n    function parseDate(s) {\n        var b = s.split(/\\D/);\n        return new Date(b[0], b[1] - 1, b[2], b[3], b[4], b[5]);\n    }\n\n\n    function getTimelineList() {\n        axios({\n            method: \"GET\",\n            url: process.env.REACT_APP_BASE_BACKEND_URL + \"/timelines\"\n        }).then((response) => {\n            const res = response.data\n            console.log(response.data)\n            setTimelineList(\n                res.timelineList\n            )\n\n        }).catch((error) => {\n            console.log(error)\n        })\n    }\n\n    useEffect(() => {\n        getTimelineList()\n    }, [])\n\n    return (\n        <div style={{ 'text-align': 'center', height: '100%', width: '100%', position: 'relative', overflow: 'hidden' }}>\n            <h2>Photo Timeline List</h2>\n            {timelineList.map((timeline) => {\n                let timelineStartDate = parseDate(timeline.startDateTime)\n                let timelineEndDate = parseDate(timeline.endDateTime)\n                return (\n                    <div className=\"timelineListItem\" key={timeline[\"_id\"]}>\n                        <h3 style={{ padding: '20px' }}><Link to={'/photoTimeline/' + timeline[\"_id\"]} style={{ color: 'black' }}>{timeline.name} ></Link></h3>\n                        <p>Start: {timelineStartDate.toDateString()}, {timelineStartDate.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}</p>\n                        <p>End: {timelineEndDate.toDateString()}, {timelineEndDate.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}</p>\n                    </div>\n                )\n            })}\n        </div>\n    )\n}","import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nexport default function TimelineList() {\n\n    function useInput() {\n        const [value, setValue] = useState(\"\")\n        const input = <input value={value} onChange={e => setValue(e.target.value)} type=\"text\" />\n        return [value, input]\n    }\n\n    const [timelineName, nameInput] = useInput();\n    const [timelineList, setTimelineList] = useState([])\n\n    function getTimelineList() {\n        axios({\n            method: \"GET\",\n            url: process.env.REACT_APP_BASE_BACKEND_URL + \"/timelines\"\n        }).then((response) => {\n            const res = response.data\n            console.log(response.data)\n            setTimelineList(\n                res.timelineList\n            )\n\n\n        }).catch((error) => {\n            console.log(error)\n        })\n\n    }\n\n    function submitTimeline() {\n        console.log(timelineName)\n        axios.post(process.env.REACT_APP_BASE_BACKEND_URL + \"/newTimelinePost\",\n            {\n                name: timelineName\n            }\n        )\n        getTimelineList()\n        window.location.reload(false)\n\n    }\n\n    useEffect(() => {\n        getTimelineList()\n    }, [])\n\n    return (\n        <div style={{\n            'text-align': 'center', height: '100%', width: '100%', position: 'relative', overflow: 'hidden'\n        }}>\n\n            <div style={{ padding: '20px' }}>\n                <h2>Enter Timeline Name to add</h2>\n                {nameInput}\n                <button onClick={submitTimeline} > Submit</button >\n            </div>\n\n            <h1>Existing Timelines</h1>\n            {\n                timelineList.map((timeline) => {\n                    return (\n                        <div className=\"timelineListItem\" key={timeline[\"_id\"]}>\n                            <h3 style={{ padding: '20px' }}><Link to={'/upload/' + timeline[\"_id\"]} style={{ color: 'black' }}>{timeline.name} > </Link></h3>\n                        </div>\n                    )\n                })\n            }\n        </div >\n    )\n}","import React from 'react';\nimport './NavBar.css';\nimport { Link } from 'react-router-dom';\n\nexport default function Navbar() {\n\n    return (\n        <div className=\"NavBar\" >\n\n            <ul id=\"NavList\">\n                <li> <p><Link className=\"Link\" to={'/timelineList/'}>View Timelines</Link></p></li>\n                <li><p><Link className=\"Link\" to={'/timelineEditList/'}>Edit Timelines</Link></p></li>\n            </ul>\n        </div>\n    )\n\n}","import React from 'react';\nimport './App.css';\nimport UploadImages from './components/UploadImages';\nimport PhotoTrail from './components/PhotoTrail';\nimport TimelineList from './components/TimelineList';\nimport TimelineEditList from './components/TimelineEditList';\nimport NavBar from './components/NavBar';\nimport { BrowserRouter, Routes, Route, Navigate } from \"react-router-dom\";\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\" style={{ position: 'fixed', height: '100%', width: '100%' }}>\n        <NavBar />\n        <div className=\"PhotoTrailWrapper\" style={{ position: 'fixed', height: '96%', width: '100%', bottom: 0 }}>\n          <Routes>\n            <Route path=\"/photoTimeline/:timelineID\" element={\n              <PhotoTrail />\n            } />\n            <Route path=\"/upload/:timelineID\" element={\n              <UploadImages />\n            } />\n            <Route path=\"/timelineList\" element={\n              <TimelineList />\n            } />\n            <Route path=\"/timelineEditList\" element={\n              <TimelineEditList />\n            } />\n            <Route path=\"*\" element={<Navigate to=\"/timelineList\" replace />} />\n          </Routes>\n        </div>\n      </div>\n    </BrowserRouter>\n\n  );\n\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\nroot.render(\n  <App />\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}